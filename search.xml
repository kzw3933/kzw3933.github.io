<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>编程语言学习总结</title>
      <link href="/2024/01/04/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/04/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><strong>计算机科学中的所有问题都可以通过增加一个间接层来解决。         — David Wheeler</strong></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本科期间,从计算机程序设计,计算机组成原理,操作系统,再到编译原理,算法,同时自学了多种编程语言,对编程语言的诞生,新编程语言的提出,不同编程语言之间的异同或者说是改进有了一些自己的体会。</p><p><strong>个人理解,计算机编程的目的在于借助计算机的硬件功能来帮助我们自行解决可计算的问题。但是不同的问题，显然，它们的解决方法或者说是计算过程(这里讨论可计算问题)是不同的。一个自然的想法是看我们自己是如何解决不同的问题的，把这个计算过程抽离出来也就形成了针对对应问题的算法。那么，如果假设，我们已经有了这样一个支持计算的计算机，也有了待解决问题的计算过程(算法),接下来的问题就是如何把这个计算过程映射到计算机上。而编程，或者说是编程语言，最初就是从计算机的角度描述这个算法的,但是，随着，抽象层次的提高和从高层次到低层次自动转换工具(编译器等工具)的出现，我们可以以接近自然语言的语法描述这个计算过程。这可以视为增加了一个抽象层隔离了底层的繁琐细节,控制了复杂度。</strong></p><p><strong>总结来说，编程语言的就是为了把算法映射到具体硬件上的计算过程描述，与此同时，随着问题规模与复杂度的提升，编程语言的层次更高，提供了抽象细节，控制复杂度的功能。</strong></p><h2 id="图灵的基本思想"><a href="#图灵的基本思想" class="headerlink" title="图灵的基本思想"></a>图灵的基本思想</h2><p>图灵机,又称确定型图灵机，是英国数学家艾伦·图灵于1936年提出的一种将人的计算行为抽象化的数学逻辑机，其更抽象的意义为一种计算模型，可以看作等价于任何有限逻辑数学过程的终极强大逻辑机器。</p><p>图灵的基本思想是用机器来模拟人们用纸笔进行数学运算的过程，他把这样的过程看作下列两种简单的动作：</p><ul><li>在纸上写上或擦除某个符号</li><li>把注意力从纸的一处移动到另一处<br>而在每个阶段，人要决定下一步的动作，依赖于（a）此人当前所关注的纸上某个位置的符号和（b）此人当前思维的状态</li></ul><p>为了模拟人的这种运算过程，图灵构造出一台假想的机器，该机器由以下几个部分组成：</p><ol><li>一条无限长的纸带<strong>TAPE</strong>。纸带被划分为一个接一个的小格子，每个格子上包含一个来自有限字母表的符号，字母表中有一个特殊的符号$\square$表示空白。纸带上的格子从左到右依次被编号为0, 1, 2, …，纸带的右端可以无限伸展。</li><li>一个读写头<strong>HEAD</strong>。它可以在纸带上左右移动，能读出当前所指的格子上的符号，并能改变它。</li><li>一套控制规则数量有限的<strong>TABLE</strong>（A finite table of instructions）。它根据当前机器所处的状态以及当前读写头所指的格子上的符号来确定读写头下一步的动作，并改变状态寄存器的值，令机器进入一个新的状态。<br>按照以下顺序告知图灵机命令：<ul><li>写入（替换）或擦除当前符号；</li><li>移动 <strong>HEAD</strong>， ‘L’向左， ‘R’向右或者’N’不移动；</li><li>保持当前状态或者转到另一状态。</li></ul></li><li>一个<strong>状态寄存器</strong>。它用来保存图灵机当前所处的状态。图灵机的所有可能状态的数目是有限的，并且有一个特殊的状态，称为停机状态。</li></ol><p>注意这个机器的每一部分都是有限的，但它有一个潜在的无限长的纸带，因此这种机器只是一个理想的设备。图灵认为这样的一台机器就能模拟人类所能进行的任何计算过程。</p><h2 id="冯诺伊曼体系结构"><a href="#冯诺伊曼体系结构" class="headerlink" title="冯诺伊曼体系结构"></a>冯诺伊曼体系结构</h2><p>冯·诺伊曼结构是一种将程序指令存储器和数据存储器合并在一起的电脑设计概念结构。它描述的是一种实现通用图灵机的计算设备，以及一种相对于并行计算的序列式结构参考模型。本结构隐约指导了将存储设备与中央处理器分开的概念，因此依本结构设计出的计算机又称存储程序计算机。</p><p>存储程序计算机在体系结构上主要特点有：</p><ul><li>以运算单元为中心</li><li>采用存储程序原理</li><li>存储器是按地址访问、线性编址的空间</li><li>控制流由指令流产生</li><li>指令由操作码和地址码组成</li><li>数据以二进制编码</li></ul><p>数学家冯·诺依曼提出了计算机制造的三个基本原则（采用二进制、程序存储、顺序执行），以及计算机的五个组成部分（运算器、控制器、存储器、输入设备、输出设备），这套理论被称为冯·诺依曼体系结构，根据这一原理制造的计算机被称为冯·诺依曼结构计算机。</p><p><strong>图灵机是理论模型，是对人计算过程的模拟；而冯诺依曼计算机则是图灵机的工程化实现，程序就是图灵机中的纸带。图灵机需要这么一根无限长的纸带，但是在现实中，不存在无限的内存,因此冯诺依曼模型实现出来的更类似有限状态自动机。诺依曼体系相对之前的计算机最大的创新在于程序和数据的存储，以此实现机器内部编程。</strong></p><h2 id="编程语言的发展"><a href="#编程语言的发展" class="headerlink" title="编程语言的发展"></a>编程语言的发展</h2><ul><li>机器语言和汇编语言<br>早期计算机使用机器语言和汇编语言进行编程，对硬件具有直接的映射。</li><li>Fortran（1957年）<br>第一个高级编程语言，用于科学和工程计算。</li><li>LISP（1958年）<br>用于人工智能研究的编程语言，具有强大的符号处理能力。</li><li>COBOL（1959年）<br>面向业务的编程语言，用于商业和金融应用。</li><li>C语言（1972年）<br>由贝尔实验室的丹尼斯·里奇（Dennis Ritchie）和肯·汤普逊（Ken Thompson）开发，成为后来许多编程语言的基础。</li><li>面向对象编程（OOP）<br>1980年代，引入了面向对象的编程语言，如Smalltalk、C++等。</li><li>脚本语言和动态语言<br>1990年代，出现了脚本语言（例如Python、Perl）和动态语言（例如Ruby）</li></ul><p><strong>计算机的出现就是为了高效，快速，自动化解决人类遇到的问题。而为了可以解决不同的问题，进而有了存储程序(可编程)的概念,因而，也就有了程序编写(面向计算机的计算过程描述)的问题，随着编程项目工程复杂度和成本的提高，工具本身的改进也就成了必然,因此，编程语言的不断发展改进也就很容易理解了。</strong></p><h2 id="编程语言的组成与功能"><a href="#编程语言的组成与功能" class="headerlink" title="编程语言的组成与功能"></a>编程语言的组成与功能</h2><p>编程语言的从最早的机器语言，以面向机器的方式描述计算过程到现在的高级编程语言以人类友好的方式描述计算过程。曾在一本编程书中看到这样的总结，<strong>计算机科学家思考问题的方式兼具数学、工程和自然科学的优点:计算机科学家像数学家那样使用规范的语言来描绘概念，具体来说就是计算；像工程师那样设计，将各个部分组装成系统并权衡不同的解决方案；像科学家那样观察复杂系统的行为，进而作出假设并进行验证</strong>。同时，计算机科学归根到底是借助计算机去自动解决人们需要解决的问题,自然是具有工程性的。工程上的问题在解决时需要重点考虑到的就是控制其复杂度。&lt;&lt;计算机程序的构造与解释&gt;&gt;中总结了编程项目中控制复杂度的方法：<code>黑盒抽象</code>、<code>约定接口</code>、<code>创建一种新的语言</code>,另外也总结了程序设计中的最基本原则:<code>原语</code>、<code>组合</code>、<code>抽象</code>，这也是编程语言所提供的功能。这也反映了编程语言因此，过程式编程,面向对象编程,函数式编程,以及各种语言提供的各种或方便或统一的语言要素也就不难理解了。</p>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transformer加速器学习总结</title>
      <link href="/2024/01/03/Transformer%E5%8A%A0%E9%80%9F%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/03/Transformer%E5%8A%A0%E9%80%9F%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="课程学习"><a href="#课程学习" class="headerlink" title="课程学习"></a>课程学习</h2><h3 id="EE290-2伯克利机器学习硬件课程"><a href="#EE290-2伯克利机器学习硬件课程" class="headerlink" title="EE290-2伯克利机器学习硬件课程"></a><a href="https://inst.eecs.berkeley.edu/~ee290-2/sp21/">EE290-2</a>伯克利<code>机器学习硬件</code>课程</h3><ul><li><p>Quantization<br>介绍了模型量化的基本知识。</p></li><li><p>Core computation in DNN<br>分析了DNN中的各个组件,包括<code>卷积</code>,<code>全连接</code>,<code>池化</code>,<code>批量归一化</code>,<code>激活</code>,核心算子为<code>卷积</code>和<code>矩阵乘法</code>,同时介绍了<code>卷积</code>的几种实现。</p></li><li><p>Execution order of the core computation<br>介绍了硬件加速的核心原则<code>Locality</code>和<code>Parallelism</code>,并分析了卷积具体实现时的执行顺序(dataflow)。</p></li><li><p>Hardware realization of the core computation<br>介绍了<code>CPU Inefficiency</code>的原因,以及DNN核心算子硬件优化的几个方面:<code>Inst. decoding logic</code>,<code>Datapath</code>和<code>Memory system</code>,并介绍了一个具体的例子<code>Google TPU</code>。</p></li><li><p>Mapping DNNs to hardware<br>介绍了由于硬件资源的约束, 需要将算法从软件上的抽象描述进行分块,循环等操作映射到具体的硬件电路执行。这其中涉及到不同的超参数可能导致不同的加速效果,因此会有large mapping space的搜索问题。</p></li><li><p>Data Orchestration<br>介绍了跨存储层次的数据传输机制，介绍了<code>直接与间接</code>和<code>耦合与非耦合</code>两个维度的区别。</p></li><li><p>Sparsity<br>介绍了DNN中的存储和计算中的稀疏性。</p></li><li><p>Codesign<br>介绍了软硬件协同设计的概念和案例。</p></li><li><p>Other Operators and Near-Data Processing<br>介绍除了<code>卷积</code>和<code>矩阵乘法</code>外的一些算子并介绍了一些专有硬件中的Near-Data Processing。</p></li><li><p>Accelerator-Level Parallelism<br>从BLP,ILP,TLP,DLP到ALP,介绍了各个层次上的并行并介绍了移动芯片上加速器级别的集成以及此级别上的并行性以及它的挑战和机遇。</p></li></ul><p>总的来说，<code>ee290-2</code>课程从AI算法核心算子提取，核心算子硬件实现,从数据流，存储局部性,并行性进行优化，算法部署,软硬件协同设计等方面系统介绍了面向AI算法进行加速器设计的流程。</p><h2 id="论文阅读"><a href="#论文阅读" class="headerlink" title="论文阅读"></a>论文阅读</h2><h3 id="推荐会议-1"><a href="#推荐会议-1" class="headerlink" title="推荐会议[1]"></a>推荐会议<sup id="fnref:1"><a href="#fn:1">[1]</a></sup></h3><h4 id="计算机体系结构顶级会议"><a href="#计算机体系结构顶级会议" class="headerlink" title="计算机体系结构顶级会议"></a>计算机体系结构顶级会议</h4><ul><li><p>ISCA(国际计算机体系结构研讨会) <code>CCF-A</code><br><code>ISCA</code>是计算机体系结构领域的顶级会议。其关注计算机体系结构和系统的设计与分析。ISCA 上的论文以其深度和完整性而闻名，提供了对计算机体系结构前沿研究的全面了解。</p></li><li><p>HPCA(高性能计算机体系结构研讨会) <code>CCF-A</code><br><code>HPCA</code>是计算机体系结构领域的另一顶级会议。其强调高性能计算和体系结构创新。HPCA 上的论文通常探讨实现计算系统高性能的新颖思想和方法。</p></li><li><p>MICRO(国际微体系结构研讨会) <code>CCF-A</code><br><code>MICRO</code>关注计算机系统的微体系结构层面。其深入研究处理器内各个组件的组织和设计细节。尽管更为详细，但它对系统性能的整体理解有着重要贡献。</p></li><li><p>ASPLOS(用于编程语言和操作系统的体系结构支持) <code>CCF-A</code><br><code>ASPLOS</code>是一个涵盖计算机体系结构、编程语言和操作系统交叉领域的会议。它经常展示这些不同方面之间的协同作用。</p></li></ul><p><code>计算机体系结构四大顶会</code>,上面的论文系统性、完整性很强，新手读起来吃力，但此类论文处于领域前沿，读完有全局概念  </p><h4 id="EDA顶级会议"><a href="#EDA顶级会议" class="headerlink" title="EDA顶级会议"></a>EDA顶级会议</h4><ul><li><p>DAC(设计自动化会议) <code>CCF-A</code><br><code>DAC</code>是专注于电子系统设计和自动化的会议，包括硬件和软件设计。它以实用和面向工程的研究而闻名，是电子设计自动化领域的研究人员和从业者的宝贵平台。</p></li><li><p>ICCAD(国际计算机辅助设计会议) <code>CCF-B</code><br><code>ICCAD</code>专注于电子系统的计算机辅助设计技术。它为电子集成电路和系统设计中使用的工具和方法的研究提供了一个平台。</p></li></ul><p>想法都不错，工程性相比于<code>计算机体系结构四大顶会</code>弱很多</p><h4 id="FPGA顶级会议"><a href="#FPGA顶级会议" class="headerlink" title="FPGA顶级会议"></a>FPGA顶级会议</h4><ul><li><p>FPGA <code>CCF-B</code><br><code>FPGA</code>是FPGA领域最重要的顶级会议，旨在展现与FPGA技术相关所有领域的最新进展，如基本逻辑电路和架构、计算机辅助设计、高层次综合、工具和模型、处理器和系统、测试方法、应用开发等</p></li><li><p>FCCM <code>CCF-C</code><br><code>FCCM</code>专注于定制计算机体系结构和可编程逻辑器件的会议。研究方向包括 FPGA 的创新应用、自定义硬件加速器的设计等。</p></li><li><p>FPL <code>CCF-C</code><br><code>FPL</code>是一个关注 FPGA 和可编程逻辑领域的国际会议。它覆盖了从 FPGA 架构到应用的广泛主题。</p></li><li><p>FPT <code>CCF-C</code><br><code>FPT</code>是一个关注可编程技术的国际会议，包括 FPGA 和其他可编程设备的研究和应用。</p></li></ul><p>这四个会议创新型依次下降，但是工程性都比较强</p><h3 id="论文主题"><a href="#论文主题" class="headerlink" title="论文主题"></a>论文主题</h3><p>主要阅读了<code>Transformer架构及其变种</code>,<code>模型压缩</code>和<code>加速器设计</code>方面的论文,相关可见<a href="../%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93-%E4%B8%80/index.html">论文阅读阶段性总结(一)</a></p><h2 id="工具学习"><a href="#工具学习" class="headerlink" title="工具学习"></a>工具学习</h2><h3 id="HLS学习资源汇总"><a href="#HLS学习资源汇总" class="headerlink" title="HLS学习资源汇总"></a>HLS学习资源汇总</h3><p>HLS（High-Level Synthesis）是一种用于硬件设计的自动化工具，它允许工程师使用高级编程语言来描述硬件功能，而无需深入了解硬件描述语言（HDL）如 Verilog 或 VHDL。有关HLS相关资料和教程主要参考Xilinx的官方资料教程</p><ul><li><p>Vivado Design Suite Tutorial: High-Level Synthesis (UG871 v2021.1 2021.3.26)<br>一组较小的教程，解释并演示了使用高层次综合将C、C++、SystemC代码转换成RTL实现过程中的所有步骤。循序渐进的介绍了<code>C验证</code>,<code>接口综合</code>,<code>优化设计</code>,<code>RTL验证</code>,<code>在IP整合器中使用HLS IP</code>，<code>在Zynq SoC设计中使用HLS IP</code>和<code>在DSP系统生成器中使用HLS IP</code>等内容。值得一提的是，教程关于优化的部分详细分析了如何使用Vitis HLS分析一个现有设计存在的问题，以及如何使用<code>HLS pragma</code>逐步优化以达到要求的吞吐率。教程中的项目源码可以<a href="https://github.com/jmduarte/HLS_hls4ml_Tutorial">HLS_hls4ml_Tutorial</a>找到,原教程使用的HLS工具版本较早,最新的HLS工具会自动完成一些优化，因此会出现和教程里不一致的情况,可以尝试较早版本的HLS工具学习。</p></li><li><p>High-Level Synthesis (UG902 v2019.2 2020.1.13)<br>高层次综合的用户指南,介绍了<code>高层次综合</code>,<code>高层次综合C语言库</code>,<code>高层次综合编码样式</code>,<code>高层次综合参考指南</code>主题的各个方面,可用作用户手册。</p></li><li><p>Introduction to FPGA Design with Vivado High-Level Synthesis(UG998 v1.1 2019.1.22)<br>面向采用Vivado高层次综合开展FPGA设计的简介,对FPGA,硬件设计的概念,Vivado高层次综合等方面进行了介绍,值得一提的是资料中前两章从编程模型角度分析了传统FPGA开发和处理器上的开发的不同，介绍HLS的出现消除了这种编程模型的差异,也从并行性上对比了FPGA和处理器,可以把HLS看作面向FPGA的C++并行编程的范式(由于FPGA提供给HLS编译器一个可变的后端,因此它可对算法的并行性进行更多的探索,用户也可以通过<code>pragma</code>的方式进行一定的约束或者指定目标)，从此视角，我们可以更好的理解HLS编译器的工作以及使用HLS进行硬件设计的概念。</p></li><li><p>Vitis High-Level Synthesis User Guide (UG1399 v2023.1 2023.7.17)<br>Vitis高层次综合用户指南,和<code>UG902</code>类似,涵盖了<code>HLS编程指南</code>,<code>使用Vitis HLS</code>,<code>Vitis HLS命令参考资料</code>,<code>Vitis HLS C语言驱动程序参考资料</code>,<code>Vitis HLS参考资料</code>和<code>Vitis HLS移植指南</code>主题的各个方面，可用作用户手册。</p></li></ul><h3 id="Chisel学习资源汇总"><a href="#Chisel学习资源汇总" class="headerlink" title="Chisel学习资源汇总"></a>Chisel学习资源汇总</h3><ul><li><p>Digital Design With Chisel<br>一本硬件设计的导论，专注于使用硬件构建语言Chisel,展示了小到中型的硬件部分，用于探索Chisel进行硬件设计。涵盖了使用Chisel进行数字电路设计的基础知识和例子,但是需要有一定的scala和chisel的基础,书中并没有涵盖对相关语法和项目搭建的完整或系统性解释。网上可以找到对应的中文版，但是翻译存在一定的问题。</p></li><li><p><a href="https://github.com/freechipsproject/chisel-bootcamp">chisel-bootcamp</a><br>github上的使用chisel设计数字电路的实战教程,项目以<code>jupyter notebook</code>形式组织，提供了搭建运行<code>jupyter notebook</code>教程环境的项目说明,依次介绍了<code>scala介绍</code>,<code>chisel设计数字电路基础</code>,<code>chisel设计数字电路进阶</code>,<code>firrtl</code>相关的知识,较为系统并且方便实操。</p></li></ul><p><a href="#fnref:1" id="fn:1">[1]: 评级参考&lt;&lt;中国计算机学会推荐国际学术会议和期刊目录-2022&gt;&gt;</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加速器设计 </tag>
            
            <tag> transformer </tag>
            
            <tag> 资源汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读阶段性总结(一)</title>
      <link href="/2024/01/03/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93-%E4%B8%80/"/>
      <url>/2024/01/03/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本科毕业设计的题目是<code>基于FPGA的通用Transformer加速器设计与优化</code>,于大四上学期调研学习关于<code>Transformer模型架构</code>，<code>模型压缩</code>，<code>硬件加速器</code>相关方面的论文。由于之前没有进行过大量论文的阅读，也就没有对论文作阅读笔记的习惯，但是随着论文阅读的增多，发现自己对之前阅读的论文的核心改进和思想常常遗忘。借着寒假开始的机会，在此，做一个论文阅读及论文核心思想的汇总。</p><h2 id="论文分类汇总"><a href="#论文分类汇总" class="headerlink" title="论文分类汇总"></a>论文分类汇总</h2><h3 id="Transformer模型架构及变种"><a href="#Transformer模型架构及变种" class="headerlink" title="Transformer模型架构及变种"></a>Transformer模型架构及变种</h3><p><strong>1. Attention Is All You Need 【NIPS 2017】</strong></p><p>论文作者提出了一种完全基于注意力机制，摒弃了递归和卷积的新的神经网络架构<code>Transformer</code>,在<code>WMT 2014 English-to-French</code>翻译任务上取得了最好的<code>BLEU</code>分数,并且展示了Transformer对于其他任务也具有很好的泛化性。</p><p>模型架构如下:</p><p><img src="/images/%E6%88%AA%E5%9B%BE%202024-01-04%2020-25-14.png"></p><p>注意力计算方式如下:<br><img src="/images/%E6%88%AA%E5%9B%BE%202024-01-04%2020-25-32.png"></p><p>由模型架构图可以看出,<code>Transformer</code>仍然是属于<code>Encoder-Decoder</code>架构, 由以下几部分组成: <code>Input Embedding</code>, <code>Positional Encoding</code>,<code>Encoder Block</code>,<code>Decoder Block</code>,<code>Output Embedding</code>。</p><ul><li><p><code>Embedding</code>: 无论是输入嵌入层还是输出嵌入层都是完成将词语嵌入为词向量，这个过程类似于查表(将某个词语编号映射为它对应的词向量)。</p></li><li><p><code>Encoder Block</code>: 每个<code>Encoder Block</code>都由带有残差连接并作LN的多头注意力和FFN组成。如上面展示的注意力计算方式，首先单头自注意力(<code>MHA</code>)实际上使用三个权重矩阵$W_q$,$W_k$,$W_v$对输入进行矩阵乘法完成$Q$,$K$,$V$的特征的提取。再将$Q$与$K$运算(论文中使用<code>scaled dot product</code>后作softmax)获得每个$Q$分量对每个$V$分量的分数,进而根据这个分数完成每个$Q$分量对整个$V$的信息提取。而多头自注意力可以简单看成是将单头自注意力的$Q$,$K$,$V$特征维度进行同样的划分,最后将划分后提取到的V的信息再按照特征维度进行拼接,不过最后还要再与一个$W_p$进行矩阵乘积，只有这样，才能具有融合这些被划分到不同head里的特征的能力。<strong>由于Transformer整个运算过程中序列长度的维度没有变化,因此可以追踪针对序列中某个token对其他token注意力的关注</strong>。另外的FFN则是两层全连接,首先将<code>MHA</code>的输出的特征维度从$dim$映射到$4dim$,然后再映射到$dim$(当然，这也是残差连接所要求的)。当然，在这两个模块的输出后还需要进行残差连接和LN。</p></li><li><p><code>Decoder Block</code>: 与<code>Encoder Block</code>类似，每层<code>Decoder Block</code>都由带有残差连接并作LN的掩码多头注意力机制,多头注意力机制，FFN组成。多头注意力的计算方式和<code>Encoder Block</code>一致。但是不同的是,对于Decoder来说,比如翻译任务，前面翻译的词不应该看到后面翻译的词，因此，需要对$Q$与$K$计算得到的score，进行相应位置的抹除(也就是置0)。而第二个多头注意力也与<code>Encoder Block</code>不同，它的$Q$,确实还是从前一层或者输入经过一个权重矩阵提取特征而来，但是$K$和$V$则是对<code>Encoder</code>最后的输出经过权重矩阵提取特征得到。而<code>FFN</code>层则一致。当然，在这三个模块的输出后还需要进行残差连接和LN。<strong>需要注意的是整个<code>Decoder</code>模块的输出是自回归的，需要逐个输出。(这一点倒是和RNN类的模型一致了)</strong></p></li><li><p><code>Positional Encoding</code>,由于<code>Transformer</code>对输入使用自注意力提取信息，而这种方式是没有位置差异的，因此，为了包含NLP领域的语句的位置信息，必然需要某种位置信息的嵌入，论文中采用了基于三角函数的位置信息的嵌入，这里不做展开。</p></li></ul><p><strong>2. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding 【NAACL 2018】</strong><br>BERT模型采用了多层的Transformer编码器堆叠在一起，其中BERT-base对应的是12层encoder,BERT-large对应的是24层的encoder。另外由于BERT是想成为语言模型的预训练模型以支持NLP领域的迁移学习，它的训练任务就需要是NLP领域的通用任务，以能提取输入的良好特征表示便于微调用于其他任务。具体来说,BERT使用两个任务来训练:</p><ol><li>将输入文本序列的部分（15%）单词随机Mask掉，让BERT来预测这些被Mask的词语</li><li>判断两个句子是否是相邻句子。</li></ol><p>模型架构如下:<br><img src="/images/%E6%88%AA%E5%9B%BE%202024-01-04%2020-46-48.png"></p><p><strong>3. An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale【ICLR 2021】</strong><br>由于Transformer模型在NLP领域的成功，促使论文作者将Transformer模型应用于图像。作者将图片划分为patches(具体来说，是把图片划分成一个一个的小块，论文里是16*16,这样图片就转换成这样一个一个小块的序列了,类似于NLP领域语句的token),剩下就是把这些patches组成的序列，输入标准的<code>Transformer</code>中(当然由于任务的不同，这里实际上只用到了Transformer的Encoder模块)。由于论文中作者作了图片分类的任务,在除了图片本身划分的patches外，额外添加一个patch(具体实现是作为可学习参数),在模型的最后提取这个patch，经过一个全连接层进行分类。</p><p>模型架构如下:<br><img src="/images/%E6%88%AA%E5%9B%BE%202024-01-04%2020-27-33.png"></p><p><strong>4. Training data-efficient image transformers &amp; distillation through attention 【ICML 2021】</strong><br>由于ViT模型的训练需要大量的训练数据，论文作者采用知识蒸馏的方式训练ViT模型解决这个问题。具体的知识蒸馏方式是，相对于ViT增加了一个distillation token，其对应的token输出值与teacher model的输出值尽可能接近。</p><p>蒸馏过程如下:<br><img src="/images/%E6%88%AA%E5%9B%BE%202024-01-04%2020-48-44.png"></p><h3 id="模型压缩"><a href="#模型压缩" class="headerlink" title="模型压缩"></a>模型压缩</h3><h4 id="剪枝"><a href="#剪枝" class="headerlink" title="剪枝"></a>剪枝</h4><ul><li><p>SELECTIVE BRAIN DAMAGE: MEASURING THE DIS-PARATE IMPACT OF MODEL PRUNING 【ICLR 2020】</p></li><li><p>DepGraph: Towards Any Structural Pruning 【CVPR2023】</p></li></ul><h4 id="量化"><a href="#量化" class="headerlink" title="量化"></a>量化</h4><ul><li><p>Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference 【CVPR 2018】</p></li><li><p>Data-Free Quantization Through Weight Equalization and Bias Correction 【ICCV 2019】</p></li><li><p>Fully Quantized Transformer for Machine Translation 【EMNLP 2020】</p></li><li><p>Additive Powers-of-Two Quantization: An Efficient Non-uniform Discretization for Neural Networks 【ICLR 2020】</p></li><li><p>A White Paper on Neural Network Quantization 【谷歌量化白皮书 2021】</p></li><li><p>Understanding and Overcoming the Challenges of Efficient Transformer Quantization 【EMNLP 2021】</p></li><li><p>Post-Training Quantization for Vision Transformer 【NIPS 2021】</p></li><li><p>FQ-ViT: Post-Training Quantization for Fully Quantized Vision Transformer 【IJCAI 2022】</p></li><li><p>PTQ4ViT: Post-Training Quantization Framework for Vision Transformers with Twin Uniform Quantization 【ECCV 2022】</p></li><li><p>RepQ-ViT: Scale Reparameterization for Post-Training Quantization of Vision Transformers 【ICCV 2023】</p></li></ul><h3 id="软硬件协同加速器设计"><a href="#软硬件协同加速器设计" class="headerlink" title="软硬件协同加速器设计"></a>软硬件协同加速器设计</h3><ul><li><p>GOBO: Quantizing Attention-Based NLP Models for Low Latency and Energy Efficient Inference 【MICRO 2020】</p></li><li><p>A$^3$: Accelerating Attention Mechanisms in Neural Networks with Approximation 【HPCA 2020】</p></li><li><p>Hardware Accelerator for Multi-Head Attention and Position-Wise Feed-Forward in the Transformer 【SOCC 2020】</p></li><li><p>Accommodating Transformer onto FPGA 【GLSVLSI 2021】</p></li><li><p>Accelerating Transformer Networks through Recomposing Softmax Layers【IISWC 2022】</p></li><li><p>ViTALiTy: Unifying Low-rank and Sparse Approximation for Vision Transformer Acceleration with a Linear Taylor Attention 【HPCA 2023】</p></li><li><p>Edge-MoE: Memory-Efficient Multi-Task Vision Transformer Architecture with Task-level Sparsity via Mixture-of-Experts 【ICCAD 2023】</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加速器设计 </tag>
            
            <tag> transformer </tag>
            
            <tag> 论文阅读 </tag>
            
            <tag> 量化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo和Github搭建个人博客</title>
      <link href="/2023/12/27/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/12/27/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>个人电脑操作系统为<code>ubuntu22.04</code>,安装<code>nodejs</code>,<code>npm</code>,<code>git</code>,<code>hexo</code>如下:<br>先安装<code>nodejs</code>,<code>npm</code>和<code>git</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nodejs</span><br><span class="line">sudo apt install npm</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><p>安装后的版本如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; node -v                             </span><br><span class="line">v12.22.9</span><br><span class="line">&gt;&gt;&gt; git --version</span><br><span class="line">git version 2.34.1</span><br><span class="line">&gt;&gt;&gt; npm -v                              </span><br><span class="line">8.5.1</span><br></pre></td></tr></table></figure><p>配置npm镜像<br>由于需要使用npm下载各种模块，默认从国外服务器下载，速度较慢,因此可以配置国内镜像,以下配置淘宝镜像(镜像地址可能会更换)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com/</span><br></pre></td></tr></table></figure><p>安装hexo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装后的hexo版本如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; hexo -v</span><br><span class="line">hexo-cli: 4.3.1</span><br><span class="line">os: linux 6.2.0-39-generic Ubuntu 22.04.3 LTS 22.04.3 LTS (Jammy Jellyfish)</span><br><span class="line">node: 12.22.9</span><br><span class="line">v8: 7.8.279.23-node.56</span><br><span class="line">uv: 1.43.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.18.1</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.43.0</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 2.1.6</span><br><span class="line">http<span class="emphasis">_parser: 2.9.4</span></span><br><span class="line"><span class="emphasis">openssl: 1.1.1m</span></span><br><span class="line"><span class="emphasis">cldr: 40.0</span></span><br><span class="line"><span class="emphasis">icu: 70.1</span></span><br><span class="line"><span class="emphasis">tz: 2023c</span></span><br><span class="line"><span class="emphasis">unicode: 14.0</span></span><br></pre></td></tr></table></figure><p>配置git及github的SSH密钥<br>在本地使用git提交文件到github仓库时，每次都需要输入账户密码进行账户验证，配置ssh登陆的公钥后，可以自动进行验证，无需每次进行账户的验证</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>使用ssh-keygen生成rsa密钥后会在用户家目录下(ubuntu shell中可使用<code>cd ~</code>进入)的.ssh文件夹下生成<code>id_rsa.pub</code>公钥文件，手动复制其中的内容，登陆github个人账户，在设置中的<code>SSH and GPG keys</code>配置SSH密钥</p><p>配置好ssh密钥后，可以使用命令行登陆github个人账户验证成功配置ssh登陆</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; ssh -T git@github.com</span><br><span class="line">Hi kzw3933! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>需要注意的是，使用ssh密钥进行git验证时，如果使用vpn会失败,这时可以暂时关闭vpn(这时不使用vpn也可以正常拉取或推送仓库)</p><h2 id="创建Hexo个人博客"><a href="#创建Hexo个人博客" class="headerlink" title="创建Hexo个人博客"></a>创建Hexo个人博客</h2><p>使用以下命令在当前目录下新建一个名为<code>kzw-blogs</code>的目录作为个人博客的目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init kzw-blogs</span><br></pre></td></tr></table></figure><p>此时<code>kzw-blogs</code>内容如下(隐藏文件或文件夹还有<code>.github</code>和<code>.gitignore</code>):</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="emphasis">_config.landscape.yml         主题的配置文件  </span></span><br><span class="line"><span class="emphasis">- _</span>config.yml                   博客的配置文件</span><br><span class="line"><span class="bullet">-</span> node<span class="emphasis">_modules                  依赖包</span></span><br><span class="line"><span class="emphasis">- package.json</span></span><br><span class="line"><span class="emphasis">- package-lock.json             项目名称、描述、版本、运行和开发等信息</span></span><br><span class="line"><span class="emphasis">- scaffolds                     生成文章的一些模板</span></span><br><span class="line"><span class="emphasis">- source                        用来存放文章</span></span><br><span class="line"><span class="emphasis">- themes                        主题</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><p>接下来可在个人博客目录下输入<code>hexo server</code>或<code>hexo s</code>启动项目,在浏览器输入<code>http://localhost:4000/</code>,即可看到初始化的hexo博客</p><h2 id="将静态博客挂载到Github-Pages"><a href="#将静态博客挂载到Github-Pages" class="headerlink" title="将静态博客挂载到Github Pages"></a>将静态博客挂载到Github Pages</h2><p>前面搭建的博客，只能在本地访问，需要将这个博客部署到公共可访问的服务器上，才能被他人访问，这里使用github提供的Github Pages的功能 </p><p>这里首先要求在github创建一个名为<code>github账户名.github.io</code>的个人仓库</p><p>安装<code>hexo-deployer-git</code>用于部署</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改<code>_config.yml</code>文件,<code>_config.yml</code>是整个Hexo框架的配置文件。可以在里面修改大部分的配置(详细可参考官方的配置描述),这里只修改有关<code>Deployment</code>配置如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:kzw3933/kzw3933.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>需要将仓库配置成个人github仓库的地址</p><p>修改好配置后,运行以下命令将代码部署到github仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>这里的<code>hexo clean</code>用于删除之前生成的文件，若未生成过静态文件，可忽略此命令;<code>hexo generate</code>用于生成静态文章，可以用<code>hexo g</code>缩写;<code>hexo deploy</code>用于部署文章，可以用<code>hexo d</code>缩写</p><p>稍等两分钟，打开浏览器访问<code>https://kzw3933.github.io</code>(换成个人的仓库地址)，这时候就可以看到博客内容了</p><h2 id="安装butterfly主题"><a href="#安装butterfly主题" class="headerlink" title="安装butterfly主题"></a>安装butterfly主题</h2><p>官方网站<code>https://butterfly.js.org/</code></p><p>在hexo博客根目录下,安装butterfly主题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>应用主题需要修改<code>_config.yml</code>中的theme配置如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>安装一些依赖</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p>重新生成博客静态文件并推送</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><h2 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h2><h3 id="创建标签页"><a href="#创建标签页" class="headerlink" title="创建标签页"></a>创建标签页</h3><p>进入hexo博客根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>此时，在<code>source</code>文件夹下，出现一个新的文件夹<code>tags</code>,里面有个<code>index.md</code>文件,修改如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2023-12-27 18:07:11</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">orderby: random</span><br><span class="line"><span class="section">order: 1</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="创建分类页"><a href="#创建分类页" class="headerlink" title="创建分类页"></a>创建分类页</h3><p>进入hexo博客根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>此时，在<code>source</code>文件夹下，出现一个新的文件夹<code>categories</code>,里面有个<code>index.md</code>文件,修改如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2023-12-27 18:11:51</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="友情链接页"><a href="#友情链接页" class="headerlink" title="友情链接页"></a>友情链接页</h3><p>进入hexo博客根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="built_in">link</span></span><br></pre></td></tr></table></figure><p>此时，在<code>source</code>文件夹下，出现一个新的文件夹<code>link</code>,里面有个<code>index.md</code>文件,修改如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2023-12-27 18:43:05</span><br><span class="line"><span class="section">type: &quot;link&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>要想显示外链，还需要在<code>source</code>文件夹下创建一个<code>_data/link.yml</code>,在<code>link.yml</code>中添加要链接的外链如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、简单且强大的博客框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">网站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">视频网站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中国最大的社交分享平台</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br></pre></td></tr></table></figure><h3 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h3><p>butterfly主题内置了一个简单的<code>404页面</code>,可在主题的配置文件<code>hexo博客根目录/themes/butterfly/_config.yml</code>中开启</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A simple 404 page</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;Page Not Found&#x27;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png</span></span><br></pre></td></tr></table></figure><p>这里需要注意的是，上面只是创建了各个页面，如果想要在顶栏显示这些(实际上可以通过自己修改访问链接导航到指定的页面)，还需要配置导航栏菜单</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h3><p>在根目录下的<code>_config.yml</code>中修改语言设置,<code>butterfly</code>主题支持三种语言，具体可见<code>themes/butterfly/languages</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="导航栏配置"><a href="#导航栏配置" class="headerlink" title="导航栏配置"></a>导航栏配置</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu 目錄</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line"><span class="string">时间轴:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line"><span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line"><span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line"><span class="comment"># 清单||fa fa-heartbeat:</span></span><br><span class="line"><span class="comment">#   音乐: /music/ || fas fa-music</span></span><br><span class="line"><span class="comment">#   照片: /Gallery/ || fas fa-images</span></span><br><span class="line"><span class="comment">#   电影: /movies/ || fas fa-video</span></span><br><span class="line"><span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line"><span class="comment"># 关于: /about/ || fas fa-heart</span></span><br></pre></td></tr></table></figure><h3 id="配置代码块显示"><a href="#配置代码块显示" class="headerlink" title="配置代码块显示"></a>配置代码块显示</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Code Blocks (代碼相關)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span> <span class="string">light</span> <span class="comment">#  darker / pale night / light / ocean / mac / mac light / false</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span> <span class="comment"># copy button</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span> <span class="comment"># show the code language</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="string">none</span> <span class="comment"># true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="number">200</span> <span class="comment"># unit: px</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>修改<code>butterfly</code>配置文件,将头像放置到<code>butterfly</code>主题文件夹下的<code>source/img</code>中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Avatar (頭像)</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/avatar.png</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><p>安装<code>hexo-generator-search</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure><h3 id="自定义主题色"><a href="#自定义主题色" class="headerlink" title="自定义主题色"></a>自定义主题色</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">&quot;#49B1F5&quot;</span></span><br><span class="line">  <span class="attr">paginator:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">button_hover:</span> <span class="string">&quot;#FF7242&quot;</span></span><br><span class="line">  <span class="attr">text_selection:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">link_color:</span> <span class="string">&quot;#99a9bf&quot;</span></span><br><span class="line">  <span class="attr">meta_color:</span> <span class="string">&quot;#858585&quot;</span></span><br><span class="line">  <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span></span><br><span class="line">  <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span></span><br><span class="line">  <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">  <span class="attr">toc_color:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">scrollbar_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br></pre></td></tr></table></figure><h3 id="页面美化"><a href="#页面美化" class="headerlink" title="页面美化"></a>页面美化</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f0c1&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">&quot;#F47466&quot;</span></span><br></pre></td></tr></table></figure><h3 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h3><p>安装<code>hexo-wordcount</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="展示数学公式"><a href="#展示数学公式" class="headerlink" title="展示数学公式"></a>展示数学公式</h3><p>安装<code>hexo-renderer-kramed</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MathJax</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Settings (社交圖標設置)</span></span><br><span class="line"><span class="attr">formal:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">link</span> <span class="string">||</span> <span class="string">the</span> <span class="string">description</span> <span class="string">||</span> <span class="string">color</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fab fa-github:</span> <span class="string">https://github.com/kzw3933</span> <span class="string">||</span> <span class="string">Github</span> <span class="string">||</span> <span class="string">&#x27;#24292e&#x27;</span></span><br><span class="line">  <span class="attr">fas fa-envelope:</span> <span class="string">mailto:3099097649@qq.com</span> <span class="string">||</span> <span class="string">Email</span> <span class="string">||</span> <span class="string">&#x27;#4a7dbe&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If the banner of page not setting, it will show the top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">/img/top.jpg</span></span><br></pre></td></tr></table></figure><h3 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">&quot;#FFFFFF&quot;</span></span><br></pre></td></tr></table></figure><h3 id="footer背景"><a href="#footer背景" class="headerlink" title="footer背景"></a>footer背景</h3><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="针对个人博客的配置"><a href="#针对个人博客的配置" class="headerlink" title="针对个人博客的配置"></a>针对个人博客的配置</h2><p>修改hexo博客根目录的配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">kzw3933&#x27;s</span> <span class="string">个人博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;记录个人的学习笔记和感悟&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">kzw3933</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://kzw3933.github.io/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><p>修改<code>butterfly</code>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">Follow</span> <span class="string">Me</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://github.com/kzw3933</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
