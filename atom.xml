<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-12-27T11:06:46.354Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用hexo和github搭建个人博客</title>
    <link href="http://example.com/2023/12/27/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2023/12/27/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-12-27T07:08:56.695Z</published>
    <updated>2023-12-27T11:06:46.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>个人电脑操作系统为<code>ubuntu22.04</code>,安装<code>nodejs</code>,<code>npm</code>,<code>git</code>,<code>hexo</code>如下:</p><ul><li><p>先安装<code>nodejs</code>,<code>npm</code>和<code>git</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nodejs</span><br><span class="line">sudo apt install npm</span><br><span class="line">sudo apt install git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装后的版本如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; node -v                             </span><br><span class="line">v12.22.9</span><br><span class="line">&gt;&gt;&gt; git --version</span><br><span class="line">git version 2.34.1</span><br><span class="line">&gt;&gt;&gt; npm -v                              </span><br><span class="line">8.5.1</span><br></pre></td></tr></table></figure></li><li><p>配置npm镜像<br>由于需要使用npm下载各种模块，默认从国外服务器下载，速度较慢,因此可以配置国内镜像,以下配置淘宝镜像(镜像地址可能会更换)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com/</span><br></pre></td></tr></table></figure></li><li><p>安装hexo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li></ul><p>安装后的hexo版本如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; hexo -v</span><br><span class="line">hexo-cli: 4.3.1</span><br><span class="line">os: linux 6.2.0-39-generic Ubuntu 22.04.3 LTS 22.04.3 LTS (Jammy Jellyfish)</span><br><span class="line">node: 12.22.9</span><br><span class="line">v8: 7.8.279.23-node.56</span><br><span class="line">uv: 1.43.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.18.1</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.43.0</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 2.1.6</span><br><span class="line">http<span class="emphasis">_parser: 2.9.4</span></span><br><span class="line"><span class="emphasis">openssl: 1.1.1m</span></span><br><span class="line"><span class="emphasis">cldr: 40.0</span></span><br><span class="line"><span class="emphasis">icu: 70.1</span></span><br><span class="line"><span class="emphasis">tz: 2023c</span></span><br><span class="line"><span class="emphasis">unicode: 14.0</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><ul><li>配置git及github的SSH密钥<br>在本地使用git提交文件到github仓库时，每次都需要输入账户密码进行账户验证，配置ssh登陆的公钥后，可以自动进行验证，无需每次进行账户的验证</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>使用ssh-keygen生成rsa密钥后会在家目录下的.ssh文件夹下生成<code>id_rsa.pub</code>公钥文件，手动复制其中的内容，登陆github个人账户，在设置中的<code>SSH and GPG keys</code>配置SSH密钥</p><p>配置好ssh密钥后，可以使用命令行登陆github个人账户验证成功配置ssh登陆</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; ssh -T git@github.com</span><br><span class="line">Hi kzw3933! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>需要注意的是，使用ssh密钥进行git验证时，如果使用vpn会失败,这时可以暂时关闭vpn(这时不使用vpn也可以正常拉取或推送仓库)</p><h2 id="创建Hexo个人博客"><a href="#创建Hexo个人博客" class="headerlink" title="创建Hexo个人博客"></a>创建Hexo个人博客</h2><p>在当前目录下新建一个名为<code>kzw-blogs</code>的目录作为个人博客的目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init kzw-blog</span><br></pre></td></tr></table></figure><p>此时<code>kzw-blogs</code>内容如下(隐藏文件或文件夹还有<code>.github</code>和<code>.gitignore</code>):</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="emphasis">_config.landscape.yml         主题的配置文件  </span></span><br><span class="line"><span class="emphasis">- _</span>config.yml                   博客的配置文件</span><br><span class="line"><span class="bullet">-</span> node<span class="emphasis">_modules                  依赖包</span></span><br><span class="line"><span class="emphasis">- package.json</span></span><br><span class="line"><span class="emphasis">- package-lock.json             项目名称、描述、版本、运行和开发等信息</span></span><br><span class="line"><span class="emphasis">- scaffolds                     生成文章的一些模板</span></span><br><span class="line"><span class="emphasis">- source                        用来存放文章</span></span><br><span class="line"><span class="emphasis">- themes                        主题</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><p>接下来可在个人博客目录下输入<code>hexo server</code>或<code>hexo s</code>启动项目,在浏览器输入<code>http://localhost:4000/</code>,即可看到初始化的hexo博客</p><h2 id="将静态博客挂载到Github-Pages"><a href="#将静态博客挂载到Github-Pages" class="headerlink" title="将静态博客挂载到Github Pages"></a>将静态博客挂载到Github Pages</h2><p>前面搭建的博客，只能在本地访问，需要将这个博客部署到公共可访问的服务器上，才能被他人访问，这里使用github提供的Github Pages的功能 </p><p>这里首先要求在github创建一个名为<code>github账户名.github.io</code>的个人仓库</p><p>安装<code>hexo-deployer-git</code>用于部署</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改<code>_config.yml</code>文件,<code>_config.yml</code>是整个Hexo框架的配置文件。可以在里面修改大部分的配置(详细可参考官方的配置描述),这里只修改有关<code>Deployment</code>配置如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Site</span></span><br><span class="line">title: kzw3933&#x27;s personal blog</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: &#x27;record my study notes&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: kzw3933</span><br><span class="line">language: en</span><br><span class="line">timezone: &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Deployment</span></span><br><span class="line"><span class="section">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:kzw3933/kzw3933.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>需要将仓库配置成个人github仓库的地址</p><p>修改好配置后,运行以下命令将代码部署到github仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>这里的<code>hexo clean</code>用于删除之前生成的文件，若未生成过静态文件，可忽略此命令;<code>hexo generate</code>用于生成静态文章，可以用<code>hexo g</code>缩写;<code>hexo deploy</code>用于部署文章，可以用<code>hexo d</code>缩写</p><p>稍等两分钟，打开浏览器访问<code>https://kzw3933.github.io</code>(换成个人的仓库地址)，这时候就可以看到博客内容了</p><h2 id="安装butterfly主题"><a href="#安装butterfly主题" class="headerlink" title="安装butterfly主题"></a>安装butterfly主题</h2><p>官方网站<code>https://butterfly.js.org/</code></p><p>在hexo博客根目录下,安装butterfly主题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>应用主题需要修改<code>_config.yml</code>中的theme配置如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>安装一些依赖</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p>重新生成博客静态文件并推送</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><h2 id="配置主题页面"><a href="#配置主题页面" class="headerlink" title="配置主题页面"></a>配置主题页面</h2><h3 id="创建标签页"><a href="#创建标签页" class="headerlink" title="创建标签页"></a>创建标签页</h3><p>进入hexo博客根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>此时，在<code>source</code>文件夹下，出现一个新的文件夹<code>tags</code>,里面有个<code>index.md</code>文件,修改如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2023-12-27 18:07:11</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">orderby: random</span><br><span class="line"><span class="section">order: 1</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="创建分类页"><a href="#创建分类页" class="headerlink" title="创建分类页"></a>创建分类页</h3><p>进入hexo博客根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>此时，在<code>source</code>文件夹下，出现一个新的文件夹<code>categories</code>,里面有个<code>index.md</code>文件,修改如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分類</span><br><span class="line">date: 2023-12-27 18:11:51</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="友情链接页"><a href="#友情链接页" class="headerlink" title="友情链接页"></a>友情链接页</h3><p>进入hexo博客根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="built_in">link</span></span><br></pre></td></tr></table></figure><p>此时，在<code>source</code>文件夹下，出现一个新的文件夹<code>link</code>,里面有个<code>index.md</code>文件,修改如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情鏈接</span><br><span class="line">date: 2023-12-27 18:43:05</span><br><span class="line"><span class="section">type: &quot;link&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h3><p>butterfly主题内置了一个简单的<code>404页面</code>,可在主题的配置文件<code>hexo博客根目录/themes/butterfly/_config.yml</code>中开启</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># A simple 404 page</span></span><br><span class="line">error<span class="emphasis">_404:</span></span><br><span class="line"><span class="emphasis">  enable: true</span></span><br><span class="line"><span class="emphasis">  subtitle: &#x27;Page Not Found&#x27;</span></span><br><span class="line"><span class="emphasis">  background: https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png</span></span><br></pre></td></tr></table></figure><p>这里需要注意的是，上面只是创建了各个页面，如果想要在顶栏显示这些(实际上可以通过自己修改访问链接导航到指定的页面)，还需要配置导航栏菜单</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Menu 目錄</span></span><br><span class="line">menu:</span><br><span class="line">  Home: / || fas fa-home</span><br><span class="line">  Archives: /archives/ || fas fa-archive</span><br><span class="line">  Tags: /tags/ || fas fa-tags</span><br><span class="line">  Categories: /categories/ || fas fa-folder-open</span><br><span class="line">  # List||fas fa-list:</span><br><span class="line">  #   Music: /music/ || fas fa-music</span><br><span class="line">  #   Movie: /movies/ || fas fa-video</span><br><span class="line">  # Link: /link/ || fas fa-link</span><br><span class="line">  # About: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hexo介绍&quot;&gt;&lt;a href=&quot;#hexo介绍&quot; class=&quot;headerlink&quot; title=&quot;hexo介绍&quot;&gt;&lt;/a&gt;hexo介绍&lt;/h2&gt;&lt;p&gt;Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub</summary>
      
    
    
    
    
  </entry>
  
</feed>
